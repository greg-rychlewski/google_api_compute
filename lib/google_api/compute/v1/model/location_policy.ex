# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.LocationPolicy do
  @moduledoc """
  Configuration for location policy among multiple possible locations (e.g. preferences for zone selection among zones in a single region).

  ## Attributes

  *   `locations` (*type:* `%{optional(String.t) => GoogleApi.Compute.V1.Model.LocationPolicyLocation.t}`, *default:* `nil`) - Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :locations =>
            %{optional(String.t()) => GoogleApi.Compute.V1.Model.LocationPolicyLocation.t()} | nil
        }

  field(:locations, as: GoogleApi.Compute.V1.Model.LocationPolicyLocation, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.LocationPolicy do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.LocationPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.LocationPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
