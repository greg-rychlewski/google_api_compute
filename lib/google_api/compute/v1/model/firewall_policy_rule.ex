# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.FirewallPolicyRule do
  @moduledoc """
  Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).

  ## Attributes

  *   `action` (*type:* `String.t`, *default:* `nil`) - The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description for this resource.
  *   `direction` (*type:* `String.t`, *default:* `nil`) - The direction in which this rule applies.
  *   `disabled` (*type:* `boolean()`, *default:* `nil`) - Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
  *   `enableLogging` (*type:* `boolean()`, *default:* `nil`) - Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules.
  *   `kind` (*type:* `String.t`, *default:* `compute#firewallPolicyRule`) - [Output only] Type of the resource. Always compute#firewallPolicyRule for firewall policy rules
  *   `match` (*type:* `GoogleApi.Compute.V1.Model.FirewallPolicyRuleMatcher.t`, *default:* `nil`) - A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
  *   `priority` (*type:* `integer()`, *default:* `nil`) - An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority.
  *   `ruleTupleCount` (*type:* `integer()`, *default:* `nil`) - [Output Only] Calculation of the complexity of a single firewall policy rule.
  *   `targetResources` (*type:* `list(String.t)`, *default:* `nil`) - A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule.
  *   `targetServiceAccounts` (*type:* `list(String.t)`, *default:* `nil`) - A list of service accounts indicating the sets of instances that are applied with this rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => String.t() | nil,
          :description => String.t() | nil,
          :direction => String.t() | nil,
          :disabled => boolean() | nil,
          :enableLogging => boolean() | nil,
          :kind => String.t() | nil,
          :match => GoogleApi.Compute.V1.Model.FirewallPolicyRuleMatcher.t() | nil,
          :priority => integer() | nil,
          :ruleTupleCount => integer() | nil,
          :targetResources => list(String.t()) | nil,
          :targetServiceAccounts => list(String.t()) | nil
        }

  field(:action)
  field(:description)
  field(:direction)
  field(:disabled)
  field(:enableLogging)
  field(:kind)
  field(:match, as: GoogleApi.Compute.V1.Model.FirewallPolicyRuleMatcher)
  field(:priority)
  field(:ruleTupleCount)
  field(:targetResources, type: :list)
  field(:targetServiceAccounts, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.FirewallPolicyRule do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.FirewallPolicyRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.FirewallPolicyRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
