# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.PublicAdvertisedPrefixPublicDelegatedPrefix do
  @moduledoc """
  Represents a CIDR range which can be used to assign addresses.

  ## Attributes

  *   `ipRange` (*type:* `String.t`, *default:* `nil`) - The IP address range of the public delegated prefix
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the public delegated prefix
  *   `project` (*type:* `String.t`, *default:* `nil`) - The project number of the public delegated prefix
  *   `region` (*type:* `String.t`, *default:* `nil`) - The region of the public delegated prefix if it is regional. If absent, the prefix is global.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The status of the public delegated prefix. Possible values are: INITIALIZING: The public delegated prefix is being initialized and addresses cannot be created yet. ANNOUNCED: The public delegated prefix is active.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ipRange => String.t() | nil,
          :name => String.t() | nil,
          :project => String.t() | nil,
          :region => String.t() | nil,
          :status => String.t() | nil
        }

  field(:ipRange)
  field(:name)
  field(:project)
  field(:region)
  field(:status)
end

defimpl Poison.Decoder,
  for: GoogleApi.Compute.V1.Model.PublicAdvertisedPrefixPublicDelegatedPrefix do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.PublicAdvertisedPrefixPublicDelegatedPrefix.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Compute.V1.Model.PublicAdvertisedPrefixPublicDelegatedPrefix do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
